
import javax.swing.*;

import java.awt.*;
import java.awt.event.*;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;

// This base class has been initially generated by ChatGPT
/**
 * An ID will be needed to avoid gui-spoofing
 */
public class ServerApp extends JFrame implements ActionListener {
    private ColoredTextPane chatArea;
    private JButton sendButton;
    private Server communicationWithServer; //(might need it)

    public ServerApp() throws RemoteException, NotBoundException {
        int width = 700, height = 800;
        Registry registry = LocateRegistry.getRegistry("localhost"); // get the registry of the host given in argument
		this.communicationWithServer = (Server) registry.lookup("RunningServerPT1");
        setTitle("Server logs - v0.1 ");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Dimension thisDimension = new Dimension(width, height);
        this.setSize(thisDimension);
        this.setPreferredSize(thisDimension);
        this.setMinimumSize(thisDimension);

        chatArea = new ColoredTextPane(new Dimension(width-100, height-100));
        chatArea.switchNightMode();
        JScrollPane chatScrollPane = new JScrollPane(chatArea);

        sendButton = new JButton("STOP");
        sendButton.addActionListener(this);

        JPanel inputPanel = new JPanel();
        inputPanel.setLayout(new BoxLayout(inputPanel, BoxLayout.LINE_AXIS));
        inputPanel.add(sendButton);

        Container contentPane = getContentPane();
        contentPane.add(chatScrollPane, BorderLayout.CENTER);
        contentPane.add(inputPanel, BorderLayout.PAGE_END);

        pack();
        setLocationRelativeTo(null);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        //TODO stop server on stop click
    }

    public void log(String s){
        chatArea.normalMessage(s);
    }

    public void log(String s, int size){
        chatArea.normalMessage(s, size);
    }

    public void run() throws RemoteException{
        this.setVisible(true);
        this.AsciiStart();
    }

    public void AsciiStart(){
        this.log("██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████", 6);
        this.log("███░░░░░░░░░░░░░░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░███░░░░░░░░███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░███", 6);
        this.log("█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░░░░░░███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██", 6);
        this.log("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░░░░░░███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█", 6);
        this.log("░░░░░░░█████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░░░░░░░░░███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░", 6);
        this.log("░░░░░░░██████████████░░░░░░░███████░░░░░░██░░░░░░█████░░░░░░░█░░░░░░░███████████░░░░░░░███░░░░░░░███████░░░░░░██░░░░░░█████░░░░░░░", 6);
        this.log("░░░░░░░██████████████░░░░░░░███████████████░░░░░░█████░░░░░░░██░░░░░░░█████████░░░░░░░████░░░░░░░███████████████░░░░░░█████░░░░░░░", 6);
        this.log("█░░░░░░░░░███████████░░░░░░░░░░░░░░░░░█████░░░░░░░░░░░░░░░░░████░░░░░░░███████░░░░░░░█████░░░░░░░░░░░░░░░░░█████░░░░░░░░░░░░░░░░░█", 6);
        this.log("██░░░░░░░░░░░░░██████░░░░░░░░░░░░░░░░░█████░░░░░░░░░░░░░░░░██████░░░░░░░█████░░░░░░░██████░░░░░░░░░░░░░░░░░█████░░░░░░░░░░░░░░░░██", 6);
        this.log("████░░░░░░░░░░░░░████░░░░░░░░░░░░░░░░░█████░░░░░░░░░░░░░░░░░██████░░░░░░░███░░░░░░░███████░░░░░░░░░░░░░░░░░█████░░░░░░░░░░░░░░░░░█", 6);
        this.log("███████░░░░░░░░░░░███░░░░░░░░░░░░░░░░░█████░░░░░░█████░░░░░░░██████░░░░░░░█░░░░░░░████████░░░░░░░░░░░░░░░░░█████░░░░░░█████░░░░░░░", 6);
        this.log("████████████░░░░░░░██░░░░░░░███████████████░░░░░░█████░░░░░░░███████░░░░░░░░░░░░░█████████░░░░░░░███████████████░░░░░░█████░░░░░░░", 6);
        this.log("████████████░░░░░░░██░░░░░░░███████░░░░░░██░░░░░░█████░░░░░░░████████░░░░░░░░░░░██████████░░░░░░░███████░░░░░░██░░░░░░█████░░░░░░░", 6);
        this.log("░░░░░░░█████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░█████████░░░░░░░░░█████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░", 6);
        this.log("░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░██████████░░░░░░░██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░", 6);
        this.log("░░░░░░░░░░░░░░░░░░█░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░███████████░░░░░███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░", 6);
        this.log("█░░░░░░░░░░░░░░░███░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░░████████████░░░████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█████░░░░░░", 6);
    }

}