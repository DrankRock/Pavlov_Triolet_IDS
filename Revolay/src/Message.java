import java.io.*;
import java.util.logging.Logger;

/**
 * @author Matvei Pavlov
 *
 * Message class containing the origin, the destination, and the message
 */
public class Message implements Serializable{
    private int from;
    private int to;
    private String message;

    /**
     * Constructor of a message
     * @param from node of origin
     * @param to node of destination
     * @param message Message to be sent
     */
    public Message(int from, int to, String message){
        this.from = from;
        this.to = to;
        this.message = message;
    }

    public int getFrom() {
        return from;
    }

    public void setFrom(int from) {
        this.from = from;
    }

    public int getTo() {
        return to;
    }

    public void setTo(int to) {
        this.to = to;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Convert a Message into a byte array, to send it over the network in rabbitmq
     * (this was generated by ChatGPT v3.5 after trying a not so clear response from stackoverflow)
     * @return the converted message
     * @throws IOException In case of error with ObjectOutputStream
     */
    public byte[] toBytes() throws IOException {
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(bos);
        oos.writeObject(this);
        oos.flush();
        return bos.toByteArray();
    }

    /**
     * Static method to get a Message from a byte array
     * @param bytes the byte array
     * @return the converted Message
     * @throws IOException in case of errors with ObjectOutputStream
     * @throws ClassNotFoundException In case of errors with ObjectInputStream.readObject();
     */
    public static Message fromBytes(byte[] bytes) throws IOException, ClassNotFoundException {
        ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
        ObjectInputStream ois = new ObjectInputStream(bis);
        return (Message) ois.readObject();
    }

    /**
     * Convert message to a string
     * @return a String version of the Message
     */
    public String toString(){
        return "<"+from+"->"+to+": "+message+">";
    }
}
